C51 COMPILER V9.00   SPI_PIC                                                               08/23/2013 18:28:32 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SPI_PIC
OBJECT MODULE PLACED IN spi_pic.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE spi_pic.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          #include "reg52.h"
   3          #include<intrins.h>
   4          #define high 1
   5          #define low 0 
   6          /*************Pin Define***************/
   7          sbit RES=P1^2;
   8          sbit DC=P1^3;
   9          sbit SCL=P1^0;
  10          sbit SDA=P1^1;
  11          /****************************************************/
  12          void Initial_LY096BG30();
  13          void Delay_50ms(unsigned int Del_50ms);
  14          void Delay_1ms(unsigned int Del_1ms);
  15          void fill_picture(unsigned char fill_Data);
  16          void Picture_1();
  17          void Write_SPI_Command(unsigned char ucCmd);
  18          void Write_SPI_Data(unsigned char ucData);
  19          /***********************Initial code*********************/
  20          void Initial_LY096BG30()
  21          {
  22   1              Write_SPI_Command(0xAE);   //display off
  23   1              Write_SPI_Command(0x20);        //Set Memory Addressing Mode    
  24   1              Write_SPI_Command(0x10);        //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing M
             -ode (RESET);11,Invalid
  25   1              Write_SPI_Command(0xb0);        //Set Page Start Address for Page Addressing Mode,0-7
  26   1              Write_SPI_Command(0xc8);        //Set COM Output Scan Direction
  27   1              Write_SPI_Command(0x00);//---set low column address
  28   1              Write_SPI_Command(0x10);//---set high column address
  29   1              Write_SPI_Command(0x40);//--set start line address
  30   1              Write_SPI_Command(0x81);//--set contrast control register
  31   1              Write_SPI_Command(0x7f);
  32   1              Write_SPI_Command(0xa1);//--set segment re-map 0 to 127
  33   1              Write_SPI_Command(0xa6);//--set normal display
  34   1              Write_SPI_Command(0xa8);//--set multiplex ratio(1 to 64)
  35   1              Write_SPI_Command(0x3F);//
  36   1              Write_SPI_Command(0xa4);//0xa4,Output follows RAM content;0xa5,Output ignores RAM content
  37   1              Write_SPI_Command(0xd3);//-set display offset
  38   1              Write_SPI_Command(0x00);//-not offset
  39   1              Write_SPI_Command(0xd5);//--set display clock divide ratio/oscillator frequency
  40   1              Write_SPI_Command(0xf0);//--set divide ratio
  41   1              Write_SPI_Command(0xd9);//--set pre-charge period
  42   1              Write_SPI_Command(0x22); //
  43   1              Write_SPI_Command(0xda);//--set com pins hardware configuration
  44   1              Write_SPI_Command(0x12);
  45   1              Write_SPI_Command(0xdb);//--set vcomh
  46   1              Write_SPI_Command(0x20);//0x20,0.77xVcc
  47   1              Write_SPI_Command(0x8d);//--set DC-DC enable
  48   1              Write_SPI_Command(0x14);//
  49   1              Write_SPI_Command(0xaf);//--turn on oled panel 
  50   1      }
  51          /***********************Picture Code**************************/
  52          unsigned char code show1[]=
  53          {
  54          0x00,0x06,0x0A,0xFE,0x0A,0xC6,0x00,0xE0,0x00,0xF0,0x00,0xF8,0x00,0x00,0x00,0x00,
C51 COMPILER V9.00   SPI_PIC                                                               08/23/2013 18:28:32 PAGE 2   

  55          0x00,0x00,0xFE,0x7D,0xBB,0xC7,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xEF,0xC7,0xBB,0x7D,
  56          0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  57          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  58          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  59          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,
  60          0x0C,0xFE,0xFE,0x0C,0x08,0x20,0x60,0xFE,0xFE,0x60,0x20,0x00,0x00,0x00,0x78,0x48,
  61          0xFE,0x82,0xBA,0xBA,0x82,0xBA,0xBA,0x82,0xBA,0xBA,0x82,0xBA,0xBA,0x82,0xFE,0x00,
  62          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  63          0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,
  64          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  65          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  66          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  67          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  68          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  69          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  70          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  71          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFF,
  72          0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0xFF,0xFF,0x00,0x00,0xFE,0xFF,0x03,
  73          0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0xFF,0xFE,0x00,0x00,0x00,0x00,0xC0,0xC0,
  74          0xC0,0x00,0x00,0x00,0x00,0xFE,0xFF,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,
  75          0xFF,0xFE,0x00,0x00,0xFE,0xFF,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0x03,0xFF,
  76          0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  77          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  78          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  79          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,
  80          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x0C,
  81          0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xFF,0xFF,0x00,0x00,0x00,0x00,0xE1,0xE1,
  82          0xE1,0x00,0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  83          0xFF,0xFF,0x00,0x00,0xFF,0xFF,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0xFF,
  84          0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  85          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  86          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  87          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x1F,
  88          0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1F,0x0F,0x00,0x00,0x0F,0x1F,0x18,
  89          0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
  90          0x00,0x00,0x00,0x00,0x00,0x0F,0x1F,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,
  91          0x1F,0x0F,0x00,0x00,0x0F,0x1F,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x1F,
  92          0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  93          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  94          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  95          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  96          0x00,0x00,0x00,0x00,0x00,0xE2,0x92,0x8A,0x86,0x00,0x00,0x7C,0x82,0x82,0x82,0x7C,
  97          0x00,0xFE,0x00,0x82,0x92,0xAA,0xC6,0x00,0x00,0xC0,0xC0,0x00,0x7C,0x82,0x82,0x82,
  98          0x7C,0x00,0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0xC0,0xC0,0x00,0x7C,0x82,0x82,0x82,
  99          0x7C,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 100          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 101          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 102          0x00,0x24,0xA4,0x2E,0x24,0xE4,0x24,0x2E,0xA4,0x24,0x00,0x00,0x00,0xF8,0x4A,0x4C,
 103          0x48,0xF8,0x48,0x4C,0x4A,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 104          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 105          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 106          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 107          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 108          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x20,0x10,0x10,
 109          0x10,0x10,0x20,0xC0,0x00,0x00,0xC0,0x20,0x10,0x10,0x10,0x10,0x20,0xC0,0x00,0x00,
 110          0x00,0x12,0x0A,0x07,0x02,0x7F,0x02,0x07,0x0A,0x12,0x00,0x00,0x00,0x0B,0x0A,0x0A,
 111          0x0A,0x7F,0x0A,0x0A,0x0A,0x0B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 112          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 113          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 114          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 115          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 116          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x40,0x40,
C51 COMPILER V9.00   SPI_PIC                                                               08/23/2013 18:28:32 PAGE 3   

 117          0x40,0x50,0x20,0x5F,0x80,0x00,0x1F,0x20,0x40,0x40,0x40,0x50,0x20,0x5F,0x80,0x00,
 118          };
 119          /*****************************************************************************
 120           函 数 名  : LED_WrDat
 121           功能描述  : 向OLED写数据
 122           输入参数  : UCHAR8 ucData  
 123           输出参数  : NONE
 124           返 回 值  : NONE
 125          *****************************************************************************/
 126          void Write_SPI_Data(unsigned char ucData)
 127          {
 128   1          unsigned char i = 8;
 129   1          DC   = 1;
 130   1          SCL  = 0;
 131   1          
 132   1          while (i--)
 133   1          {
 134   2              if (ucData & 0x80)
 135   2              {
 136   3                  SDA = 1;
 137   3              }
 138   2              else
 139   2              {
 140   3                  SDA = 0;
 141   3              }
 142   2              
 143   2              SCL = 1; 
 144   2              _nop_();
 145   2              SCL = 0;    
 146   2              ucData <<= 1;    
 147   2          }
 148   1      
 149   1          return;
 150   1      }
 151          
 152          /*****************************************************************************
 153           函 数 名  : LED_WrCmd
 154           功能描述  : 向OLED写命令
 155           输入参数  : UCHAR8 ucCmd  
 156           输出参数  : NONE
 157           返 回 值  : NONE
 158          *****************************************************************************/
 159          void Write_SPI_Command(unsigned char ucCmd)
 160          {
 161   1          unsigned char i = 8;
 162   1          DC   = 0;
 163   1          SCL  = 0;
 164   1          while (i--)
 165   1          {
 166   2              if (ucCmd & 0x80)
 167   2              {
 168   3                  SDA = 1;
 169   3              }
 170   2              else
 171   2              {
 172   3                  SDA = 0;
 173   3              }
 174   2              SCL = 1;
 175   2              _nop_();           
 176   2              SCL = 0;    
 177   2              ucCmd <<= 1;   
 178   2          }  
C51 COMPILER V9.00   SPI_PIC                                                               08/23/2013 18:28:32 PAGE 4   

 179   1      
 180   1          return;
 181   1      }
 182          
 183          /********************************************
 184          // fill_Picture
 185          ********************************************/
 186          void fill_picture(unsigned char fill_Data)
 187          {
 188   1              unsigned char m,n;
 189   1              for(m=0;m<8;m++)
 190   1              {
 191   2                      Write_SPI_Command(0xb0+m);              //page0-page1
 192   2                      Write_SPI_Command(0x00);                //low column start address
 193   2                      Write_SPI_Command(0x10);                //high column start address
 194   2                      for(n=0;n<128;n++)
 195   2                              {
 196   3                                      Write_SPI_Data(fill_Data);
 197   3                              }
 198   2              }
 199   1      }
 200          /******************************************
 201          // picture
 202          ******************************************/
 203          void picture_1()
 204          {
 205   1        unsigned char x,y;
 206   1        unsigned int i=0;
 207   1        for(y=0;y<8;y++)
 208   1          {
 209   2            Write_SPI_Command(0xb0+y);
 210   2            Write_SPI_Command(0x00);
 211   2            Write_SPI_Command(0x10);
 212   2            for(x=0;x<128;x++)
 213   2              {
 214   3                Write_SPI_Data(show1[i++]);
 215   3              }
 216   2          }
 217   1      }
 218          
 219          
 220          /***********************Delay****************************************/
 221          void Delay_50ms(unsigned int Del_50ms)          //
 222          {
 223   1              unsigned int m;
 224   1              for(;Del_50ms>0;Del_50ms--)
 225   1                      for(m=6245;m>0;m--);
 226   1      }
 227          
 228          void Delay_1ms(unsigned int Del_1ms)            //
 229          {
 230   1              unsigned char j;
 231   1              while(Del_1ms--)
 232   1              {       
 233   2                      for(j=0;j<123;j++);
 234   2              }
 235   1      }
 236          /*******************************Main*******************************/
 237          void main(void)
 238          {
 239   1              RES=0;
 240   1              Delay_1ms(10);
C51 COMPILER V9.00   SPI_PIC                                                               08/23/2013 18:28:32 PAGE 5   

 241   1              RES=1;
 242   1              Delay_1ms(10);                          //
 243   1              DC=0;                   //                      //
 244   1              Initial_LY096BG30();
 245   1              Delay_1ms(5);
 246   1              while(1)
 247   1              {
 248   2                      Picture_1();            
 249   2              }
 250   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    379    ----
   CONSTANT SIZE    =   1024    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
